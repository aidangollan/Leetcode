#link to problem https://leetcode.com/problems/longest-substring-without-repeating-characters/description/
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        if len(s) == 0 or len(s) == 1 or len(set(s)) == len(s):
            return len(s)
        sub_str = ""
        longest_len = 0
        j = 0
        for i in range(len(s)):
            while len(set(sub_str)) == len(sub_str) and (i + j) < len(s):
                sub_str += s[i + j]
                j += 1
            if len(set(sub_str)) != len(sub_str):
                sub_str = sub_str[:len(sub_str) - 1]
            if len(sub_str) > longest_len:
                longest_len = len(sub_str)
            j = 0
            sub_str = ""
        return longest_len
